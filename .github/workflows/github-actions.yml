# github repository actions name
name: CI/CD using github actions & docker

# event trigger
on:
  push:
    branches: ["develop"]

# possible read commit
permissions:
  contents: read

jobs:
  docker:
    name: build and push docker
    runs-on: ubuntu-latest # ubuntu 가상 머신에서 실행
    steps:
      # git , branch code init
      - name: Git checkout
        uses: actions/checkout@v4

      # JDK setting - github actions에서 사용할 JDK 설정
      # 참고 - project , aws의 java 버전과 달라도 무방
      # vender https://github.com/actions/setup-java
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: swagger json build
        run: ./gradlew openapi3

      - name: Swagger json to ec2 Use SCP
        uses: appleboy/scp-action@master
        with:
          username: ${{secrets.EC2_USERNAME}}
          host: ${{ secrets.EC2_HOST }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          source: "./wwooss-api/src/main/resources/static/docs/open-api-3-wwooss-service.json"
          target: "/home/ec2-user/swagger"

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: Login To DockerHub
        if: contains(github.ref, 'develop')
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./wwooss-api/DockerFile
          push: true
          tags: wwooss/wwooss-api:latest
          build-args: |
            SPRING_PROFILES_ACTIVE=develop

      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          password: ${{ secrets.EC2_PASSWORD }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          timeout: 60s
          script: |
            cd /home/ec2-user/docker-compose
            sudo docker rm -f $(docker ps -qa)
            sudo docker pull ${{ secrets.DOCKER_REPO }}
            sudo docker-compose down
            sudo docker-compose up -d

